package cz.cvut.fel.pjv.model.Origin;

import java.util.HashMap;

/**
 * class of game Map
 * Used for calculation of size of game window
 * Used for saving parameters about number of enemies
 * Game Hashmap of coordinates is generated by this class
 */
public class Map {

    private int numberOfbonuses;
    private int numberOfEnemies;
    private int numberOfDummyEnemies;
    private int numberOfSpeedyEnemies;
    private int sizeX;
    private int sizeY;

    /**
     *
     * @param hm
     */
    public Map(HashMap<String, Integer> params) {
        this.numberOfbonuses = params.get("Bonuses");
        this.numberOfEnemies = params.get("Basic Enemy");
        this.numberOfDummyEnemies = params.get("Dummy Enemy");
        this.numberOfSpeedyEnemies = params.get("Speedy Enemy");
        this.sizeX = params.get("Lenght") * 45;
        this.sizeY = params.get("Height") * 45;
    }

    /**
     *
     * @return
     */
    public int getNumberOfbonuses() {
        return numberOfbonuses;
    }

    /**
     *
     * @return
     */
    public int getNumberOfEnemies() {
        return numberOfEnemies;
    }

    /**
     *
     * @return
     */
    public int getNumberOfDummyEnemies() {
        return numberOfDummyEnemies;
    }
    
    /**
     *
     * @return
     */
    public int getNumberOfSpeedyEnemies() {
        return numberOfSpeedyEnemies;
    }

    /**
     *
     * @return
     */
    public int getSizeX() {
        return sizeX;
    }

    /**
     *
     * @return
     */
    public int getSizeY() {
        return sizeY;
    }
    
    /**
     * this method read String data and convert them into new Map
     * Used for loading game and server comunication
     * @param stringMap StringDataOfMap
     * @return new instance of Mapgit a
     */
    public static Map readFromString(String stringMap){
        String[] array = stringMap.split(",");
        HashMap<String, Integer> coordinates = new HashMap<>();
        coordinates.put("Bonuses", 0);
        coordinates.put("Basic Enemy", 0);
        coordinates.put("Dummy Enemy", 0);
        coordinates.put("Speedy Enemy", 0);
        coordinates.put("Lenght", Integer.parseInt(array[0]));
        coordinates.put("Height", Integer.parseInt(array[1]));     
        return new Map(coordinates);               
    }
}
